model{
  for (i in 1:Nobs){ 
  
    time_transf1[i]<-(equals(P1,0)*log(time[i]) + (1-equals(P1,0))*pow(time[i],P1))
    
    time_transf2[i]<-((1-equals(P2,P1))*(equals(P2,0)*log(time[i]) + (1-equals(P2,0))*pow(time[i],P2)) + equals(P2,P1)*(equals(P2,0)*log(time[i])*log(time[i])+ (1-equals(P2,0))*pow(time[i],P2) *log(time[i])))
    
    # likelihood   
    r[i] ~ dbin(p[i], n[i])
    p[i] <- 1 - exp(-h[i] * dt[i])
    
    log(h[i])<-Beta[i,1]+ Beta[i,2]*time_transf1[i]+ Beta[i,3]* time_transf2[i]
    
    # Beta[i,1]<-mu[s[i],1]+delta[s[i],1]*(1-equals (k[i], b[i]))
    # Beta[i,2]<-mu[s[i],2]+delta[s[i],2]*(1-equals (k[i], b[i]))
    # Beta[i,3]<-mu[s[i],3]+delta[s[i],3]*(1-equals (k[i], b[i]))
    
    Beta[i,1]<-mu[s[i],1]+delta[s[i],1]*(1-equals (k[i], b[i]))
    Beta[i,2]<-mu[s[i],2]+(d[ks[s[i]],2]-d[bs[s[i]],2])*(1-equals (k[i], b[i]))
    Beta[i,3]<-mu[s[i],3]+(d[ks[s[i]],3]-d[bs[s[i]],3])*(1-equals (k[i], b[i]))
    
  }
  
  theta <- pow( sd , 2 )
  
  for(m in 1:Ns){
   
    delta[m,1]~dmnorm( md[ m, 1], theta )
    
    md[m,1]<-d[ks[m],1]-d[bs[m],1]
    
    # delta[m,2]<-d[ks[m],2]-d[bs[m],2]
    # delta[m,3]<-d[ks[m],3]-d[bs[m],3]
    
  }

  # priors

  d[1,1]<-0
  d[1,2]<-0
  d[1,3]<-0
  
  for(j in 2:Ntrt){
    d[j,1:3] ~ dmnorm(prior.mean[ 1 : 3 ], prior.prec[ , ])
  }
  
  for(k in 1:Ns){
    mu[k,1:3] ~ dmnorm(prior.mean[ 1 : 3 ], prior.prec[ , ])
  }
  
  sd ~ dunif(0,2)
  
}